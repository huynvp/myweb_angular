(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{U3xU:function(e,t,s){"use strict";s.d(t,"a",(function(){return i}));var r=s("IheW"),a=s("AytR");class i{constructor(e){this.http=e,this.header=new r.g({"content-type":"application/json",Authorization:`Bearer ${localStorage.access_token}`})}getPermission(){return this.http.get(`${a.a.baseUrl}/permissions`,{headers:this.header}).toPromise()}getDetailPermission(e){return this.http.get(`${a.a.baseUrl}/permissions/${e}`,{headers:this.header}).toPromise()}addPermission(e){return this.http.post(`${a.a.baseUrl}/permissions`,JSON.stringify({name:e}),{headers:this.header}).toPromise()}editPermission(e,t,s){return this.http.put(`${a.a.baseUrl}/permissions/${e}`,JSON.stringify({name:t,timestamp:s}),{headers:this.header}).toPromise()}deletePermission(e){return this.http.delete(`${a.a.baseUrl}/permissions/${e}`,{headers:this.header}).toPromise()}detailPermission(e){return this.http.get(`${a.a.baseUrl}/permissions/${e}/users`,{headers:this.header}).toPromise()}getLogUser(e,t){return this.http.get(`${a.a.baseUrl}/user/logs?numberOfPage=${e}&currentPage=${t}`,{headers:this.header}).toPromise()}showListTask(){return this.http.get(`${a.a.baseUrl}/taskWorks`,{headers:this.header}).toPromise()}showDetailTask(e){return this.http.get(`${a.a.baseUrl}/taskWorks/${e}`,{headers:this.header}).toPromise()}addNewTask(e,t,s,r,i){return this.http.post(`${a.a.baseUrl}/taskWorks`,JSON.stringify({Title:e,Content:t,DateOfTask:s,Status:r,Type:i}),{headers:this.header}).toPromise()}editTask(e,t,s,r,i,h){return this.http.put(`${a.a.baseUrl}/taskWorks/${e}`,JSON.stringify({Title:t,Content:s,DateOfTask:r,Status:i,Type:h}),{headers:this.header}).toPromise()}changeStatusTask(e,t){return this.http.put(`${a.a.baseUrl}/taskWorks/${e}`,JSON.stringify({Status:t}),{headers:this.header}).toPromise()}deleteTask(e){return this.http.delete(`${a.a.baseUrl}/taskWorks/${e}`,{headers:this.header}).toPromise()}showDetailMess(e){return this.http.get(`${a.a.baseUrl}/admin/messageLogs/${e}`,{headers:this.header}).toPromise()}addNewMess(e,t){return this.http.post(`${a.a.baseUrl}/admin/messageLogs`,JSON.stringify({Title:e,Content:t}),{headers:this.header}).toPromise()}editMess(e,t,s,r){return this.http.put(`${a.a.baseUrl}/admin/messageLogs/${e}`,JSON.stringify({Title:t,Content:s,Timestamp:r}),{headers:this.header}).toPromise()}deleteMess(e){return this.http.delete(`${a.a.baseUrl}/admin/messageLogs/${e}`,{headers:this.header}).toPromise()}addNewProject(e){return this.http.post(`${a.a.baseUrl}/projectLogs`,JSON.stringify(e),{headers:this.header}).toPromise()}deleteProject(e){return this.http.delete(`${a.a.baseUrl}/projectLogs/${e}`,{headers:this.header}).toPromise()}deleteLog(e,t){return this.http.delete(`${a.a.baseUrl}/projectLogs/${e}/logs/${t}`,{headers:this.header}).toPromise()}deleteLogs(e,t){return this.http.request("DELETE",`${a.a.baseUrl}/projectLogs/${e}/logs`,{headers:this.header,body:{Id:t}}).toPromise()}}}}]);