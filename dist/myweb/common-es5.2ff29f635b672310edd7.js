function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,s){return t&&_defineProperties(e.prototype,t),s&&_defineProperties(e,s),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{U3xU:function(e,t,s){"use strict";s.d(t,"a",(function(){return o}));var a=s("IheW"),r=s("AytR"),o=function(){function e(t){_classCallCheck(this,e),this.http=t,this.header=new a.g({"content-type":"application/json",Authorization:"Bearer ".concat(localStorage.access_token)})}return _createClass(e,[{key:"getPermission",value:function(){return this.http.get("".concat(r.a.baseUrl,"/permissions"),{headers:this.header}).toPromise()}},{key:"getDetailPermission",value:function(e){return this.http.get("".concat(r.a.baseUrl,"/permissions/").concat(e),{headers:this.header}).toPromise()}},{key:"addPermission",value:function(e){return this.http.post("".concat(r.a.baseUrl,"/permissions"),JSON.stringify({name:e}),{headers:this.header}).toPromise()}},{key:"editPermission",value:function(e,t,s){return this.http.put("".concat(r.a.baseUrl,"/permissions/").concat(e),JSON.stringify({name:t,timestamp:s}),{headers:this.header}).toPromise()}},{key:"deletePermission",value:function(e){return this.http.delete("".concat(r.a.baseUrl,"/permissions/").concat(e),{headers:this.header}).toPromise()}},{key:"detailPermission",value:function(e){return this.http.get("".concat(r.a.baseUrl,"/permissions/").concat(e,"/users"),{headers:this.header}).toPromise()}},{key:"getLogUser",value:function(e,t){return this.http.get("".concat(r.a.baseUrl,"/user/logs?numberOfPage=").concat(e,"&currentPage=").concat(t),{headers:this.header}).toPromise()}},{key:"showListTask",value:function(){return this.http.get("".concat(r.a.baseUrl,"/taskWorks"),{headers:this.header}).toPromise()}},{key:"showDetailTask",value:function(e){return this.http.get("".concat(r.a.baseUrl,"/taskWorks/").concat(e),{headers:this.header}).toPromise()}},{key:"addNewTask",value:function(e,t,s,a,o){return this.http.post("".concat(r.a.baseUrl,"/taskWorks"),JSON.stringify({Title:e,Content:t,DateOfTask:s,Status:a,Type:o}),{headers:this.header}).toPromise()}},{key:"editTask",value:function(e,t,s,a,o,n){return this.http.put("".concat(r.a.baseUrl,"/taskWorks/").concat(e),JSON.stringify({Title:t,Content:s,DateOfTask:a,Status:o,Type:n}),{headers:this.header}).toPromise()}},{key:"changeStatusTask",value:function(e,t){return this.http.put("".concat(r.a.baseUrl,"/taskWorks/").concat(e),JSON.stringify({Status:t}),{headers:this.header}).toPromise()}},{key:"deleteTask",value:function(e){return this.http.delete("".concat(r.a.baseUrl,"/taskWorks/").concat(e),{headers:this.header}).toPromise()}},{key:"showDetailMess",value:function(e){return this.http.get("".concat(r.a.baseUrl,"/admin/messageLogs/").concat(e),{headers:this.header}).toPromise()}},{key:"addNewMess",value:function(e,t){return this.http.post("".concat(r.a.baseUrl,"/admin/messageLogs"),JSON.stringify({Title:e,Content:t}),{headers:this.header}).toPromise()}},{key:"editMess",value:function(e,t,s,a){return this.http.put("".concat(r.a.baseUrl,"/admin/messageLogs/").concat(e),JSON.stringify({Title:t,Content:s,Timestamp:a}),{headers:this.header}).toPromise()}},{key:"deleteMess",value:function(e){return this.http.delete("".concat(r.a.baseUrl,"/admin/messageLogs/").concat(e),{headers:this.header}).toPromise()}},{key:"addNewProject",value:function(e){return this.http.post("".concat(r.a.baseUrl,"/projectLogs"),JSON.stringify(e),{headers:this.header}).toPromise()}},{key:"deleteProject",value:function(e){return this.http.delete("".concat(r.a.baseUrl,"/projectLogs/").concat(e),{headers:this.header}).toPromise()}},{key:"deleteLog",value:function(e,t){return this.http.delete("".concat(r.a.baseUrl,"/projectLogs/").concat(e,"/logs/").concat(t),{headers:this.header}).toPromise()}},{key:"deleteLogs",value:function(e,t){return this.http.request("DELETE","".concat(r.a.baseUrl,"/projectLogs/").concat(e,"/logs"),{headers:this.header,body:{Id:t}}).toPromise()}}]),e}()}}]);